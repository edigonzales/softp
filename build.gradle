plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

apply from: "gradle/versioning.gradle"

group = 'ch.so.agi'
sourceCompatibility = '8'

repositories {
	mavenCentral()
    flatDir {
       dirs 'libs'
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	implementation 'org.apache.ftpserver:ftplet-api:1.1.1'
    implementation 'org.apache.ftpserver:ftpserver-core:1.1.1'
    //implementation 'vfsutils-ftpserver-0.2.0-SNAPSHOT' // http://vfs-utils.sourceforge.net/#ftpserverindex.html 
    compile fileTree(include: ["*.jar"], dir: "libs")
    compile group: 'org.apache.commons', name: 'commons-vfs2', version: '2.4.1'
    compile group: 'commons-net', name: 'commons-net', version: '3.7.2'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.55'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
    useJUnitPlatform()
    failFast = true
    testLogging {
        showStandardStreams = true
    }   
}

bootJar {
    layered()
}

import java.text.SimpleDateFormat

def getCheckedOutGitCommitHash() {
    'git log -1 --pretty=%H'.execute().text.trim()
}

task versionTxt()  {
    outputs.upToDateWhen { false }
    doLast {
        new File("version.txt").text = """
Version: $version
Revision: ${getCheckedOutGitCommitHash()}
Buildtime: ${new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date())}
Application-name: ili2gpkg-web-service
"""
    }
}
task copyVersionTxt(type: Copy) {
    from "version.txt"
    into "src/main/resources/static/"
}
copyVersionTxt.dependsOn(versionTxt)
build.dependsOn(copyVersionTxt)
classes.dependsOn(copyVersionTxt)
